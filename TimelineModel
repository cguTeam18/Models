/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Models;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Random;
/**
 *
 * @author jidev
 * To Do:
 * Potential test case: Make sure no two timeline IDs are the same value
 * Parse Linked Event information to an event object, then add that object to the event Arraylist.
 * - Will have to make a for each loop to address this. 
*/
public class TimelineModel implements Serializable {
    
    private String timelineId;
    private String timelineTitle;
    private LocalDateTime dateCreated;
    private String dateCreatedString;
    private ArrayList timelineEvents;
    
    
    public static void main(String[]args) {
        TimelineModel tl = new TimelineModel();
        tl.randomStringGen();
    }
    public TimelineModel() {
        LocalDateTime date = LocalDateTime.now();
        ArrayList events = new ArrayList();
        timelineId = randomStringGen();
        timelineTitle = ("Untitled");
        dateCreated = date;
        timelineEvents = events;
    }
    
    public TimelineModel(String timelineId, String timelineTitle, String dateCreated) {
        this.timelineId = timelineId;
        this.timelineTitle = timelineTitle;
        LocalDateTime date = LocalDateTime.parse(dateCreated, DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"));
        this.dateCreated = date;
        ArrayList events = new ArrayList();
    }
    
    public TimelineModel(String timelineId, String timelineTitle, String dateCreated, ArrayList timelineEvents) {
        this.timelineId = timelineId;
        this.timelineTitle = timelineTitle;
        LocalDateTime date = LocalDateTime.parse(dateCreated, DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"));
        this.dateCreated = date;
        //TO DO
        // Events have to be parsed into a string, which then have to be parsed as values for event creation.
        // This will be done in the event class. There could be a call to the event class to do this.
        // Once all Event objects are created, the must be added to the timelineEvent ArrayList.
        // This may take a while...
    }
    
    public final String randomStringGen() {
        Random random = new Random();
        String characters = "1234567890ABCDEFGHIJK";
        StringBuilder sb = new StringBuilder();
        
        
        for(int i = 0; i < 25; i++) {
            sb.append(characters.charAt(random.nextInt(characters.length())));
        }
        
        String result = sb.toString();
        System.out.println(result);
        return result;
    }
    
    public String getTimelineId() {
        return this.timelineId;
    }
    
    public String getTimelineTitle() {
        return this.timelineTitle;
    }
    
    public void setTimelineTitle(String timelineTitle) {
        this.timelineTitle = timelineTitle;
    }
    
    public String getDateCreatedString() {
        return this.dateCreatedString;
    }
    
    public void setDateCreatedString(String dateCreatedString) {
        //TO DO
        //Make sure the entered information is digits only and conforms to formatting "dd-MM-yyyy HH:mm"
        this.dateCreatedString = dateCreatedString;
    }
   
    public LocalDateTime getDateCreatedLDT() {
        return this.dateCreated;
    }
    
    public void setDateCreated() {
        LocalDateTime date = LocalDateTime.parse(this.dateCreatedString, DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"));
        this.dateCreated = date;
    }
    
    public ArrayList getTimelineEvents() {
        return this.timelineEvents;
    }
    
    
}
